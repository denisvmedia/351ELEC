diff -rupN dosbox-pure.orig/Makefile dosbox-pure.new/Makefile
--- dosbox-pure.orig/Makefile	2021-01-03 07:44:04.447056755 -0500
+++ dosbox-pure.new/Makefile	2021-01-03 07:46:35.016193086 -0500
@@ -25,7 +25,7 @@ ISMAC      := $(wildcard /Applications)
 endif
 
 PIPETONULL := $(if $(ISWIN),>nul 2>nul,>/dev/null 2>/dev/null)
-PROCCPU    := $(shell $(if $(ISWIN),GenuineIntel Intel sse sse2,cat /proc/cpuinfo))
+#PROCCPU    := $(shell $(if $(ISWIN),GenuineIntel Intel sse sse2,cat /proc/cpuinfo))
 
 SOURCES := \
 	*.cpp       \
@@ -33,60 +33,24 @@ SOURCES := \
 	src/*/*.cpp \
 	src/*/*/*.cpp
 
-ifneq ($(ISWIN),)
-  OUTNAME := dosbox_pure_libretro.dll
-  CXX     ?= g++
-  LDFLAGS :=  -Wl,--gc-sections
-else ifneq ($(ISMAC),)
-  OUTNAME := dosbox_pure_libretro.dylib
-  CXX     ?= clang++
-  LDFLAGS :=  -Wl,-dead_strip
-else
-  OUTNAME := dosbox_pure_libretro.so
-  CXX     ?= g++
-  LDFLAGS :=  -Wl,--gc-sections
-endif
+BUILD    := RELEASE
+BUILDDIR := release
 
-ifneq ($(and $(filter ARMv7,$(PROCCPU)),$(filter neon,$(PROCCPU))),)
-  CPUFLAGS := -mcpu=cortex-a72 -mfpu=neon-fp-armv8 -mfloat-abi=hard -ffast-math
-  ifneq ($(findstring version 10,$(shell g++ -v 2>&1)),)
-    # Switch to gcc 9 to avoid buggy assembly genetation of gcc 10
-    # On armv7l, gcc 10.2 with -O2 on the file core_dynrec.cpp generates assembly that wrongfully passes NULL to the runcode function
-    # resulting in a segfault crash. It can be observed by writing block->cache.start to stdout twice where it is NULL at first
-    # and then the actual value thereafter. This affects upstream SVN DOSBox as well as this core.
-    CXX := g++-9
-  endif
-else
-  CPUFLAGS :=
-endif
+CPUFLAGS := -mtune=cortex-a35 -mcpu=cortex-a35 -march=armv8-a+crc+fp+simd
+ 
+OUTNAME := dosbox_pure_libretro.so
+
+BUILD    := RELEASE
+BUILDDIR := release
+CFLAGS   := -DNDEBUG -O2 -fno-ident
+LDFLAGS  += -O2 -fno-ident
 
-ifeq ($(BUILD),DEBUG)
-  BUILDDIR := debug
-  CFLAGS   := -DDEBUG -D_DEBUG -g -O0
-else ifeq ($(BUILD),PROFILE)
-  BUILDDIR := profile
-  CFLAGS   := -DNDEBUG -O2
-else ifeq ($(BUILD),RELEASEDBG)
-  BUILDDIR := releasedbg
-  CFLAGS   := -DNDEBUG -ggdb -O2
-  LDFLAGS  += -ggdb -O2
-else ifeq ($(BUILD),ASAN)
-  BUILDDIR := asan
-  CFLAGS   := -DDEBUG -D_DEBUG -g -O0 -fsanitize=address -fno-omit-frame-pointer
-  LDFLAGS  += -fsanitize=address -g -O0
-else
-  BUILD    := RELEASE
-  BUILDDIR := release
-  CFLAGS   := -DNDEBUG -O2 -fno-ident
-  LDFLAGS  += -O2 -fno-ident
-endif
-
-CFLAGS  += $(CPUFLAGS) -std=c++11 -fpic -fomit-frame-pointer -fno-exceptions -fno-non-call-exceptions -Wno-address-of-packed-member -Wno-format -Wno-switch
+CFLAGS  += $(CPUFLAGS) -fpic -fomit-frame-pointer -fno-exceptions -fno-non-call-exceptions -Wno-psabi -Wno-format
 CFLAGS  += -fvisibility=hidden -ffunction-sections -fdata-sections
 CFLAGS  += -pthread -D__LIBRETRO__ -Iinclude
-
-LDFLAGS += $(CPUFLAGS) -lpthread -shared
-#LDFLAGS += -static-libstdc++ -static-libgcc #adds 1MB to output
+ 
+LDFLAGS += $(CPUFLAGS) -lpthread -Wl,--gc-sections -shared
+ 
 
 .PHONY: all clean
 all: $(OUTNAME)
